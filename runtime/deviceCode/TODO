- Source line should include optional "Array paramname"
  to read items from an array of source node's input type
  referenced through paramname, which must have same type as
  source's input type

- Current behavior is just to pass size_t values, and app will
  not typecheck if source module does not take size_ts.
 
- Generate an app-level "SourceView" object that the Source should
  call to get an item.  By default, EltT get(size_t i) const returns
  i. For the buffer case, it returns buffer[i].

The derived DeviceApp constructor needs to create the SourceView
object and pass it to the source node constructor instead of the
current SourceData.  The source node then uses it to initialize a
Source object at runtime init time.

If the SourceView is trivial identity, we pass it nothing, and its
init() fcn is empty

If the SourceView is getting from a buffer, we'd pass it a ptr to the
appParams struct, and at init time, its init() fcn should cache the
buffer ptr from this struct or the duration of the run so
sourcegetter.get() doesn't have to double-dereference to get it.

If the SourceView is a user function, at init time, it should call
its init() function to let the user set up the getter from the
current appParams.

Issue: if Source is always calling SourceView::get(), it is doing an
extra level of indirection each time.  Would prefer to somehow fuse
Source with SourceView so that the indirection is not needed.
SourceView's constructor, init(), and get() all need to be codegen'd
in some way.  Maybe after we init the view to set up its state, we
copy it into the Source by value rather than passing a pointer?

Or, we can have Source be a template over SourceView, let it contain a
SourceView object, and initialize this object in-place
post-construction by passing it appParams.  This seems hard to
do inside SourceNode, though.

-------------------------------------

We currently go around the scheduling loop if we exhaust one source block
and need to read another.  It would be nice if we could stay inside run()
for the duration of this operation.
